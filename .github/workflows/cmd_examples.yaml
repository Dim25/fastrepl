# https://dev.to/zirkelc/trigger-github-workflow-for-comment-on-pull-request-45l2
name: Handle PR Comment (/examples)
on:
  issue_comment:
    types: [created, edited, deleted]

jobs:
  handle_comment_examples:
    name: Deploy
    if: ${{ github.event.issue.pull_request && github.event.comment.user.login == 'yujonglee' && contains(github.event.comment.body, '/examples') }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version:
          - "3.11"
        poetry-version:
          - "1.5.1"

    steps:
      - name: Get PR branch
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch

      - name: Set latest commit status as pending
        uses: myrotvorets/set-commit-status-action@master
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: pending

      - name: Checkout PR branch ${{ steps.comment-branch.outputs.head_ref }}
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}

      ### START
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry ${{ matrix.poetry-version }}
        run: |
          python -m ensurepip
          python -m pip install --upgrade pip
          python -m pip install poetry==${{ matrix.poetry-version }}

      - name: Install dependencies
        run: task install

      - name: Run all examples
        run: |
          task run:example:all
      ### END

      - name: Add comment to PR
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const name = '${{ github.workflow }}';
            const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const success = '${{ job.status }}' === 'success';
            const body = `${name}: ${success ? 'This PR does not break any examples ✅' : 'This PR breaks some examples ❌'}\n${url}`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })
